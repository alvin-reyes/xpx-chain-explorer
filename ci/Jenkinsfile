pipeline {
  agent {
    node {
      label 'docker-build-node'
    }
  }

  environment {
    npm_config_cache = "npm-cache"
    nexusAuth = credentials('jenkins-nexus-npm')
  }

  options {
    timestamps()
  }

  stages {
    stage('Build') {
      steps {
        echo 'Writing Nexus Credentials'
        script {
          // Writes a multi-line .npmrc file with the authentication hash for Nexus
          writeFile file: '.npmrc', text: 'registry=https://nexus.internal.proximax.io/repository/npm-group/\n@scope:registry=https://nexus.internal.proximax.io/repository/npm-private/\nemail=jenkins@proximax.io\nalways-auth=true\n_auth=' + env.nexusAuth + '\n'
        }

        echo 'Starting Docker Container'
        withDockerContainer(image: 'node:8') {
          echo 'Installing dependencies'
          sh 'npm install'

          echo 'Building'
          sh 'npm run build'
        }

          echo 'Leaving Container'

        }

        post {
          failure {
            slackSend channel: '#devops',
              color: 'bad',
              message: "Branch *${env.GIT_BRANCH}* build of *${currentBuild.fullDisplayName}* FAILED :scream:"
          }
        }
      }

      stage('Deploy Testnet Tag') {
        when {
          tag 'release-testnet*' // Deploy only if tagged with release-testnet*
        }

        steps {
          echo 'Deploying'

          echo 'Managing S3'

          // AWS Plugin cannot sync. It must clear the bucket then reupload
          withAWS(credentials: 'jenkins-ecr', region: 'ap-southeast-2') {
            echo 'Deleting old files'
            s3Delete bucket: 'bctestnetexplorer.xpxsirius.io', path: './'

            echo 'Uploading new files'
            s3Upload bucket: 'bctestnetexplorer.xpxsirius.io', acl: 'PublicRead', file: 'dist/', sseAlgorithm: 'AES256'
          }

          echo 'Managing CloudFront'

          withAWS(credentials: 'jenkins-ecr') {
            echo 'Invalidating CloudFront'
            cfInvalidate distribution: 'E1RZY6CIY8D6XA', paths: ['/*']
          }
        }

        post {
          success {
            slackSend channel: '#devops',
              color: 'good',
              message: "Branch *${env.GIT_BRANCH}* build of *${currentBuild.fullDisplayName}* completed successfully :100:\nDeployed to http://bctestnetexplorer.xpxsirius.io"
          }
          failure {
            slackSend channel: '#devops',
              color: 'bad',
              message: "Branch *${env.GIT_BRANCH}* of *${currentBuild.fullDisplayName}* FAILED :scream:"
          }
        }
      }
    }
}

